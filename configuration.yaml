
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  customize: !include customize.yaml
frontend:
  themes: !include_dir_merge_named themes
python_script:
http:
api:

logger:
  default: info
  logs:
    custom_components.ztm: debug
    custom_components.ztm.sensor: debug
    homeassistant.components.ztm: debug
    ztm: debug
    

#panel_custom:
#  - name: floorplan
#    sidebar_title: Plan
#    sidebar_icon: mdi:home-modern
#    url_path: floorplan
#    config: !include floorplan.yaml

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

#asuswrt:
#  host: 192.168.50.1
#  port: 1025
#  protocol: ssh
#  username: !secret login
#  password: !secret passwd1
#  sensors:
#    - devices
#    - upload
#    - download
#    - upload_speed
#    - download_speed

#fan:
#  - platform: xiaomi_miio
#    name: Air Purifier Salon
#    host: 192.168.50.124
#    token: !secret xiaomiAirToken
#    model: zhimi.airpurifier.mb3

media_player:
  - platform: samsungtv_tizen
    host: 192.168.50.21
    mac: !secret tv_mac
    app_list: '{"YouTube": "111299001912", "HBO GO": "3201706012478", "Prime Video": "3201512006785"}'
    is_frame_tv: True
  - platform: smartthings_soundbar
    name: Soundbar
    api_key: !secret samsung_sound_api
    device_id: !secret soundbar_id
    max_volume: 20

spotify:
  client_id: !secret spotify_id
  client_secret: !secret spotify_key

device_tracker:
  - platform: google_maps
    username: pjhomeassistant@gmail.com
    scan_interval: 60
#  - platform: bluetooth_le_tracker
#    track_battery: true

binary_sensor:
  - platform: workday
    country: PL
  - platform: car_wash
    weather: weather.home
  - platform: template
    sensors:
      window:
        device_class: opening
        value_template: "{{ is_state('device_tracker.esp_57981c', 'home') }}"
        icon_template: >-
          {% if is_state("device_tracker.esp_57981c", "home") %}
            mdi:window-open-variant
          {% else %}
            mdi:window-closed-variant
          {% endif %}
sonoff:
  username: !secret hamail
  password: !secret haintegration

#ble_monitor:
#    devices:
#        - mac: 'A4:C1:38:47:06:3C'
#          encryption_key: 'c4363fabc4cad597703e311d844e8377'

light:
  - platform: group
    name: Living Room RGB
    entities:
      - light.sonoff_1000ee217a
      - light.sonoff_1000f44d8b

alarm_control_panel:
  - platform: manual
    name: Home Alarm
    arming_time: 5
    delay_time: 2
    trigger_time: 60

#yahoofinance:
#  symbols:
#    - ^DJI
#    - CL=F
#    - GC=F
#    - AMZN
#    - GOOGL
#    - MSFT
#    - AAPL
#    - 005930.KS
#    - PLN=X
#    - EUR=X
#    - BTC-USD
#  show_trending_icon: true

sensor:
  - platform: uptime
  - platform: version
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: processor_use
      - type: ipv4_address
        arg: eth0
      - type: last_boot
  - platform: command_line
    name: Raspberry Pi Temp
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(2) }}'
    scan_interval:
      minutes: 15
  - platform: template
    sensors:
      termostat_1_error:
        friendly_name: "Temperature 1 error"
        unit_of_measurement: '°C'
        value_template: "{{(state_attr('climate.salon','current_temperature') | float - states('sensor.582d34388e86_temperature') | float) | round(1, default=0) }}"
      termostat_2_error:
        friendly_name: "Temperature 2 error"
        unit_of_measurement: '°C'
        value_template: "{{(state_attr('climate.sypialnia','current_temperature') | float - states('sensor.a4c13847063c_temperature') | float) | round(1, default=0) }}"
      termostat_1_temp:
        friendly_name: "Termostat 1 temp"
        unit_of_measurement: '°C'
        value_template: >-
                {{ state_attr('climate.salon', 'current_temperature') }}
      termostat_2_temp:
        friendly_name: "Termostat 2 temp"
        unit_of_measurement: '°C'
        value_template: >-
                {{ state_attr('climate.sypialnia', 'current_temperature') }}
      termostat_3_temp:
        friendly_name: "Termostat 3 temp"
        unit_of_measurement: '°C'
        value_template: >-
                {{ state_attr('climate.lazienka', 'current_temperature') }}
  - platform: template
    sensors:
      battery_mi1:
        friendly_name: "Battery MiTemp 1"
        unit_of_measurement: '%'
        value_template: >-
                {{ state_attr('sensor.ble_temperature_582d34388d0f', 'battery_level')|round }}
        device_class: battery
  - platform: template
    sensors:
      battery_mi2:
        friendly_name: "Battery MiTemp 2"
        unit_of_measurement: '%'
        value_template: >-
                {{ state_attr('sensor.ble_temperature_582d34388e86', 'battery_level')|round }}
        device_class: battery
  - platform: template
    sensors:
      smartwatch_connection:
        friendly_name: 'Galaxy Watch 4'
        value_template: >-
                {{ '58:A6:39:82:23:64' in state_attr('sensor.sm_n975f_polaczenie_bluetooth', 'connected_paired_devices') }}
        icon_template: >-
            {{ 'mdi:watch' }}
      headphones_connection:
        friendly_name: 'Bose NC700'
        value_template: >-
                {{ '4C:87:5D:2A:0B:54' in state_attr('sensor.sm_n975f_polaczenie_bluetooth', 'connected_paired_devices') }}
        icon_template: >-
            {{ 'mdi:headphones-bluetooth' }}
  - platform: template
    sensors:
      battery_mi3:
        friendly_name: "Battery MiTemp 3"
        unit_of_measurement: '%'
        value_template: >-
                {{ state_attr('sensor.ble_temperature_a4c13847063c', 'battery_level')|round }}
        device_class: battery
  - platform: template
    sensors:
      battery_onemeter:
        friendly_name: "Battery OneMeter"
        unit_of_measurement: '%'
        value_template: >-
                {{ ((1-((3 - (states('sensor.onemeter_voltage') | float)) / 0.3 )) * 100) | round() }}
        device_class: battery
  - platform: template
    sensors:
      workday_description:
        friendly_name: "Czy dziś praca?"
        value_template: >-
          {% if is_state("binary_sensor.workday_sensor","on") %}
            Dziś jest dzień pracujący.
          {% else %}
            Dziś jest dzień wolny.
          {% endif %}
        icon_template: >-
          {% if is_state("binary_sensor.workday_sensor","on") %}
            mdi:briefcase-account-outline
          {% else %}
            mdi:emoticon-outline
          {% endif %}
  - platform: looko2
    api_key: !secret looko2
    name: LookO2
    station_id: 'A020A603680A'
    monitored_conditions:
      - 'AverageHCHO'
      - 'AveragePM1'
      - 'AveragePM10'
      - 'AveragePM25'
      - 'Color'
      - 'HCHO'
      - 'Humidity'
      - 'IJP'
      - 'IJPDescription'
      - 'IJPDescriptionEN'
      - 'IJPString'
      - 'IJPStringEN'
      - 'Indoor'
      - 'PM1'
      - 'PM10'
      - 'PM25'
      - 'PreviousIJP'
      - 'Temperature'
    scan_interval:
      minutes: 20
  - platform: hydro_imgw
    station_id: "152210170"
  - platform: ztm
    api_key: !secret ztm_api
    lines:
      - number: 10
        stop_id: 6027
        stop_number: "04"
      - number: 33
        stop_id: 6027
        stop_number: "04"
      - number: 10
        stop_id: 6026
        stop_number: "03"
      - number: 33
        stop_id: 6026
        stop_number: "03"
#  - platform: waze_travel_time
#    origin: person.piotr
#    destination: zone.home
#    region: 'EU'
#    name: "Me to home"
#  - platform: waze_travel_time
#    origin: person.piotr
#    destination: zone.zone
#    region: 'EU'
#    name: "Me to office"
  - platform: history_stats
    name: Czas home office
    entity_id: device_tracker.plpjarmoszko03_2
    state: 'home'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Czas w biurze
    entity_id: device_tracker.sm_n975f
    state: 'Deloitte CBT'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'
  - platform: rest
    scan_interval: 1800
    name: OneMeter
    resource: https://cloud.onemeter.com/api/devices/97105fd9-e4c3-4781-8f92-83b6c12e2d80
    value_template: "{{ value_json.lastReading.OBIS['F_8_0'] }} {{ value_json.lastReading.OBIS['S_1_1_2'] }} {{ value_json.lastReading.OBIS['S_1_1_4'] }} {{ value_json.usage['thisMonth'] }} {{ value_json.usage['previousMonth'] }} {{ value_json.usage['projection'] }} {{ value_json.firmware['currentVersion'] }}"
    force_update: true
    headers:
      Authorization: !secret onemeter_api
  - platform: template
    sensors:
      onemeter_kwh:
        friendly_name: "Energy Readout"
        unit_of_measurement: "kWh"
        icon_template: mdi:flash
        device_class: energy
#        state_class: total_increasing
#        last_reset: 2021-09-07T17:45:00
        value_template: "{{ states.sensor.onemeter.state.split(' ')[0] }}"
#        native_value: "{{ states.sensor.onemeter.state.split(' ')[0] }}"
#        native_unit_of_measurement: "kWh"
      onemeter_voltage:
        friendly_name: "Battery Voltage"
        unit_of_measurement: "v"
        icon_template: mdi:battery
        value_template: "{{ states.sensor.onemeter.state.split(' ')[1] }}"
      onemeter_timestamp:
        friendly_name: "Last Readout"
        icon_template: mdi:clock
        value_template: "{{ as_timestamp(states.sensor.onemeter.state.split(' ')[2]) | timestamp_custom('%d-%m-%Y %H:%M', True) }}"
      onemeter_this_month:
        friendly_name: "Current Monthly Consumption"
        unit_of_measurement: "kWh"
        icon_template: mdi:calendar-month
        value_template: "{{ states.sensor.onemeter.state.split(' ')[3] | float | round(2) }}"
      onemeter_previous_month:
        friendly_name: "Previous Month Consumption"
        unit_of_measurement: "kWh"
        icon_template: mdi:calendar-multiple
        value_template: "{{ states.sensor.onemeter.state.split(' ')[4] | float | round(2) }}"
      onemeter_projection:
        friendly_name: "Projected Monthly Consumption"
        unit_of_measurement: "kWh"
        icon_template: mdi:calendar-search
        value_template: "{{ states.sensor.onemeter.state.split(' ')[5] | float | round(2) }}"
      onemeter_firmware:
        friendly_name: "Firmware Version"
        icon_template: mdi:chip
        value_template: "{{ states.sensor.onemeter.state.split(' ')[6] }}"
  - platform: template
    sensors:
      air_purifier_mode:
        friendly_name: "Working Mode"
        value_template: "{{ state_attr('fan.mi_air_purifier_3_3h', 'speed') }}"
        icon_template: >-
          {% if state_attr('fan.mi_air_purifier_3_3h', 'speed') == 'Auto' %}
            mdi:power-cycle
          {% elif state_attr('fan.mi_air_purifier_3_3h', 'speed') == 'Fan' %}
            mdi:fan
          {% elif state_attr('fan.mi_air_purifier_3_3h', 'speed') == 'Silent' %}
            mdi:weather-night
          {% endif %}
#  - platform: powercalc
#    entity_id: light.sonoff_1000f44d8b
#  - platform: powercalc
#    entity_id: light.sonoff_1000ee217a
#  - platform: powercalc
#    entity_id: light.sonoff_1000ee2034
#  - platform: powercalc
#    entity_id: light.0x14b457fffef67f86_light
#    manufacturer: ikea
#    model: LED1733G7
#  - platform: powercalc
#    entity_id: light.0xd0cf5efffe32186d
#    manufacturer: ikea
#    model: LED1733G7
#  - platform: powercalc
#    entity_id: light.0xbc33acfffe6f251a
#    manufacturer: ikea
#  - platform: powercalc
#    entity_id: light.0x5c0272fffe70d31b
#    manufacturer: ikea